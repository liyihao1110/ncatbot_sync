name: Publish Python Package

on:
  push:
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Extract and Validate Version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        VERSION=${TAG_NAME#v}
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "::error::Invalid version format: $VERSION. Use X.Y.Z"
          exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Install Build Tools
      run: |
        python -m pip install --upgrade pip
        pip install "setuptools>=61.0" build twine

    - name: Validate pyproject.toml
      run: |
        if ! grep -q 'build-backend = "setuptools.build_meta"' pyproject.toml; then
          echo "::error::Invalid build-backend configuration"
          exit 1
        fi


    - name: Build Package
      run: python -m build --sdist --wheel --outdir dist/

    - name: Publish to PyPI
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --username __token__ --password "$PYPI_TOKEN" dist/*
